// <auto-generated />
using System;
using JobScraperBot.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JobScraperBot.DAL.Migrations
{
    [DbContext(typeof(JobScraperBotContext))]
    partial class JobScraperBotContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JobScraperBot.DAL.Entities.Grade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b029e897-181d-4d1a-8d88-dae9c6e32842"),
                            GradeName = "trainee_intern"
                        },
                        new
                        {
                            Id = new Guid("2ae095ee-0a25-448b-aa4c-3f36d6bfd690"),
                            GradeName = "junior"
                        },
                        new
                        {
                            Id = new Guid("4732ea9c-5213-44d7-bf6c-1d3b3ebb0541"),
                            GradeName = "middle"
                        },
                        new
                        {
                            Id = new Guid("64dafd11-1362-4f4e-b30c-676f85da3d9f"),
                            GradeName = "senior"
                        },
                        new
                        {
                            Id = new Guid("5ca50086-db24-42d3-8f1c-fd99dd08f9b0"),
                            GradeName = "team_lead"
                        },
                        new
                        {
                            Id = new Guid("65a8789f-75af-4844-b988-54a719affc99"),
                            GradeName = "head_chief"
                        });
                });

            modelBuilder.Entity("JobScraperBot.DAL.Entities.HiddenVacancy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HiddenVacancies");
                });

            modelBuilder.Entity("JobScraperBot.DAL.Entities.JobKind", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KindName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobKinds");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c5b3ab08-2e77-49a8-a6be-dce363847c22"),
                            KindName = "office"
                        },
                        new
                        {
                            Id = new Guid("aceceff4-c31c-4bcb-9477-e34c20904059"),
                            KindName = "remote"
                        },
                        new
                        {
                            Id = new Guid("b6c47d47-8d77-46fc-9451-32d3eb1003d3"),
                            KindName = "office_or_remote"
                        });
                });

            modelBuilder.Entity("JobScraperBot.DAL.Entities.MessageIntervalEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Interval")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MessageIntervals");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6a502243-794c-4db9-918a-71aae13713e8"),
                            Interval = "daily"
                        },
                        new
                        {
                            Id = new Guid("75bb9554-4bd8-4bc5-8e36-8a8bf6c93dae"),
                            Interval = "once_in_two_days"
                        },
                        new
                        {
                            Id = new Guid("7b467d34-83d2-4e6c-8748-e884ad0c76c1"),
                            Interval = "weekly"
                        });
                });

            modelBuilder.Entity("JobScraperBot.DAL.Entities.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("MessageIntervalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("NextUpdate")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("MessageIntervalId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("JobScraperBot.DAL.Entities.SubscriptionSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GradeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("JobKindId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("JobKindId");

                    b.HasIndex("StackId");

                    b.HasIndex("SubscriptionId")
                        .IsUnique();

                    b.ToTable("SubscriptionSettings");
                });

            modelBuilder.Entity("JobScraperBot.DAL.Entities.WorkStack", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StackName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stacks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2b085c17-ec37-4214-91c7-f6806ff40864"),
                            StackName = ".net"
                        },
                        new
                        {
                            Id = new Guid("ebcb84e1-e67c-4d9e-bdea-7ec59e9c8f2e"),
                            StackName = "front_end"
                        },
                        new
                        {
                            Id = new Guid("65afd9dc-73cc-476e-b460-a1547313323c"),
                            StackName = "java"
                        },
                        new
                        {
                            Id = new Guid("2e5f45c5-0758-4396-9744-6d93bdbf7466"),
                            StackName = "full_stack"
                        },
                        new
                        {
                            Id = new Guid("9d439620-e7e4-4e2d-b868-b90e0fe66d58"),
                            StackName = "python"
                        });
                });

            modelBuilder.Entity("JobScraperBot.DAL.Entities.Subscription", b =>
                {
                    b.HasOne("JobScraperBot.DAL.Entities.MessageIntervalEntity", "MessageInterval")
                        .WithMany("Subscriptions")
                        .HasForeignKey("MessageIntervalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MessageInterval");
                });

            modelBuilder.Entity("JobScraperBot.DAL.Entities.SubscriptionSettings", b =>
                {
                    b.HasOne("JobScraperBot.DAL.Entities.Grade", "Grade")
                        .WithMany("SubscriptionSettings")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobScraperBot.DAL.Entities.JobKind", "JobKind")
                        .WithMany("SubscriptionSettings")
                        .HasForeignKey("JobKindId");

                    b.HasOne("JobScraperBot.DAL.Entities.WorkStack", "Stack")
                        .WithMany("SubscriptionSettings")
                        .HasForeignKey("StackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobScraperBot.DAL.Entities.Subscription", "Subscription")
                        .WithOne("SubscriptionSettings")
                        .HasForeignKey("JobScraperBot.DAL.Entities.SubscriptionSettings", "SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");

                    b.Navigation("JobKind");

                    b.Navigation("Stack");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("JobScraperBot.DAL.Entities.Grade", b =>
                {
                    b.Navigation("SubscriptionSettings");
                });

            modelBuilder.Entity("JobScraperBot.DAL.Entities.JobKind", b =>
                {
                    b.Navigation("SubscriptionSettings");
                });

            modelBuilder.Entity("JobScraperBot.DAL.Entities.MessageIntervalEntity", b =>
                {
                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("JobScraperBot.DAL.Entities.Subscription", b =>
                {
                    b.Navigation("SubscriptionSettings")
                        .IsRequired();
                });

            modelBuilder.Entity("JobScraperBot.DAL.Entities.WorkStack", b =>
                {
                    b.Navigation("SubscriptionSettings");
                });
#pragma warning restore 612, 618
        }
    }
}
